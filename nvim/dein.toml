# Shougo's packages
[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
endfunction
'''

[[plugins]]
repo = 'Shougo/deol.nvim'

[[plugins]]
repo = 'Shougo/neoinclude.vim'

[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
[[plugins]]
repo = 'Shougo/defx.nvim'
depends = ['roxma/vim-hug-neovim-rpc', 'roxma/nvim-yarp']
on_cmd = 'Defx'
hook_add = '''
nnoremap <silent> <Space>f :<C-u>Defx -columns=icons:indent:filename:type -listed -resume -buffer-name=tab`tabpagenr()`<CR>
autocmd FileType defx call s:defx_my_settings()
    function! s:defx_my_settings() abort
     " Define mappings
      nnoremap <silent><buffer><expr> <CR>
     \ defx#do_action('open')
      nnoremap <silent><buffer><expr> c
     \ defx#do_action('copy')
      nnoremap <silent><buffer><expr> m
     \ defx#do_action('move')
      nnoremap <silent><buffer><expr> p
     \ defx#do_action('paste')
      nnoremap <silent><buffer><expr> l
     \ defx#do_action('open')
      nnoremap <silent><buffer><expr> E
     \ defx#do_action('open', 'vsplit')
      nnoremap <silent><buffer><expr> P
     \ defx#do_action('open', 'pedit')
      nnoremap <silent><buffer><expr> K
     \ defx#do_action('new_directory')
      nnoremap <silent><buffer><expr> N
     \ defx#do_action('new_file')
      nnoremap <silent><buffer><expr> d
     \ defx#do_action('remove')
      nnoremap <silent><buffer><expr> r
     \ defx#do_action('rename')
      nnoremap <silent><buffer><expr> x
     \ defx#do_action('execute_system')
      nnoremap <silent><buffer><expr> yy
     \ defx#do_action('yank_path')
      nnoremap <silent><buffer><expr> .
     \ defx#do_action('toggle_ignored_files')
      nnoremap <silent><buffer><expr> h
     \ defx#do_action('cd', ['..'])
      nnoremap <silent><buffer><expr> ~
     \ defx#do_action('cd')
      nnoremap <silent><buffer><expr> q
     \ defx#do_action('quit')
      nnoremap <silent><buffer><expr> <Space>
     \ defx#do_action('toggle_select') . 'j'
      nnoremap <silent><buffer><expr> *
     \ defx#do_action('toggle_select_all')
      nnoremap <silent><buffer><expr> j
     \ line('.') == line('$') ? 'gg' : 'j'
      nnoremap <silent><buffer><expr> k
     \ line('.') == 1 ? 'G' : 'k'
      nnoremap <silent><buffer><expr> <C-l>
     \ defx#do_action('redraw')
      nnoremap <silent><buffer><expr> <C-g>
     \ defx#do_action('print')
      nnoremap <silent><buffer><expr> cd
     \ defx#do_action('change_vim_cwd')
    endfunction
'''

[[plugins]]
repo = 'kristijanhusak/defx-icons'
hook_add='''
let g:defx_icons_enable_syntax_highlight = 1
let g:defx_icons_column_length = 2
let g:defx_icons_directory_icon = ''
let g:defx_icons_mark_icon = '*'
let g:defx_icons_parent_icon = ''
let g:defx_icons_default_icon = ''
let g:defx_icons_directory_symlink_icon = ''
let g:defx_icons_root_opened_tree_icon = ''
let g:defx_icons_nested_opened_tree_icon = ''
let g:defx_icons_nested_closed_tree_icon = ''
'''

[[plugins]]
repo = "ryanoasis/vim-devicons"


[[plugins]]
repo = 'ncm2/float-preview.nvim'
hook_add = '''
  let g:float_preview#docked = 1
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <silent> <Space>r : <C-u>QuickRun<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'neovim/python-client'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = 'cpp'

[[plugins]]
repo = 'tomtom/tcomment_vim'
[[plugins]]
repo = 'vim-latex/vim-latex'


[[plugins]]
repo = 'rhysd/vim-clang-format'
[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = 'md'
hook_add='''
let g:table_mode_corner='|'
'''

# Language Server Protocol 
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
depends = ['deoplete.nvim']
build = 'zsh install.sh'
hook_add = '''
let g:LanguageClient_serverCommands = {
\ 'cpp': ['/usr/local/src/cquery/build/release/bin/cquery', 
\ '--log-file=/tmp/cq.log', 
" set cacheDirectory to /var/cquery may cause permission problem on linux
" set it to /tmp/cquery/ can fix it
\ '--init={"cacheDirectory":"/tmp/cquery/"}']
\ }
nnoremap <silent> <F12> :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> <S-F12> :call LanguageClient#textDocument_references()<CR>
let g:LanguageClient_autoStart = 1
let g:LanguageClient_useVirtualText = 0
'''
hook_source = '''
set completefunc=LanguageClient#complete
'''

# color scheme
[[plugins]]
repo = 'sickill/vim-monokai'
[[plugins]]
repo = 'cocopon/iceberg.vim'
[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'w0ng/vim-hybrid'
[[plugins]]
repo = 'jonathanfilip/vim-lucius'
[[plugins]]
repo = 'raphamorim/lucario'
[[plugins]]
repo = 'jdkanani/vim-material-theme'
[[plugins]]
repo = 'jacoborus/tender.vim'
[[plugins]]
repo = 'miyakogi/seiya.vim'

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
hook_add='''
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_experimental_simple_template_highlight = 1
let g:cpp_experimental_template_highlight = 1
let g:cpp_concepts_highlight = 1
'''
