"general setting
set number
set nocompatible
set encoding=utf-8
scriptencoding utf-8
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set cindent
set showcmd
set nobackup
set clipboard=unnamed,autoselect 
set infercase
set spell 
set spelllang=en,cjk
" set pumheight=11
set showmatch
set matchtime=1
set ignorecase
set smartcase
set incsearch
set hlsearch
filetype plugin indent on
set list
set listchars=tab:»-,trail:-,extends:»,precedes:«,nbsp:%,eol:↲
set laststatus=2
set t_Co=256
set cursorline
inoremap jj <Esc>

" Load dein
if filereadable(expand('~/.dein.vimrc'))
	source ~/.dein.vimrc
endif
" Powerline
if has('python')
	python from powerline.vim import setup as powerline_setup
	python powerline_setup()
	python del powerline_setup
	set rtp+=~/.local/lib/python2.7/site-packages/powerline/bindings/vim
elseif has('python3')
	python3 from powerline.vim import setup as powerline_setup
	python3 powerline_setup()
	python3 del powerline_setup
	set rtp+=~/.local/lib/python3.5/site-packages/powerline/bindings/vim
endif

"" colorscheme setting
set background=dark
" autocmd ColorScheme * highlight LineNr ctermfg=35
" let g:hybrid_reduced_contrast = 1
colorscheme hybrid
" colorscheme elflord
" colorscheme koehler 
" colorscheme monokai
" colorscheme molokai
" colorscheme iceberg
" colorscheme solarized 

let g:solarized_termcolors=256
let g:seiya_auto_enable=1
" let &colorcolumn=join(range(81,82),",")

if filereadable(expand('~/.neocomplete.vimrc'))
	source ~/.neocomplete.vimrc
endif

if filereadable(expand('~/.clang.vimrc'))
	source ~/.clang.vimrc
	noremap <C-k> :execute ":%! clang-format-3.8"<cr>
endif

" markdownの折りたたみなし
let g:vim_markdown_folding_disabled=1

" vimを立ち上げたときに、自動的にvim-indent-guidesをオンにする
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2
let g:indent_guides_auto_colors = 0

" autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red ctermbg=black
" autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=red ctermbg=darkgrey


let NERDTreeShowHidden = 1
nmap <C-@> :NERDTreeToggle<CR>

" unite.vim
let g:unite_source_history_yank_enable = 1
try
	let g:unite_source_rec_async_command='ag --nocolor --nogroup -g ""'
	call unite#filters#matcher_default#use(['matcher_fuzzy'])
catch
endtry
" search a file in the filetree
nnoremap <space><space> :split<cr> :<C-u>Unite -start-insert file_rec/async<cr>
" reset not it is <C-l> normally
:nnoremap <space>r <Plug>(unite_restart)

" for snippets
imap <C-l> <Plug>(neosnippet_expand_or_jump)
smap <C-l> <Plug>(neosnippet_expand_or_jump)

let g:neosnippet#snippets_directory='$HOME/.cache/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets,$HOME/.vim/snippets/,$HOME/.dotfiles/public/vim-snippets/'

autocmd BufNewFile,BufRead *.launch setlocal filetype=xml
autocmd BufNewFile,BufRead *.urdf setlocal filetype=xml.urdf
autocmd BufNewFile,BufRead *.xacro setlocal filetype=xml.urdf
autocmd BufNewFile,BufRead *.tex setlocal filetype=tex

autocmd BufNewFile, *.xacro 0r $HOME/.dotfiles/public/vim-templates/xml.txt
autocmd BufNewFile, *.urdf 0r $HOME/.dotfiles/public/vim-templates/xml.txt
autocmd BufNewFile, *.launch 0r $HOME/.dotfiles/public/vim-templates/launch.txt
autocmd BufNewFile, *.py 0r $HOME/.dotfiles/public/vim-templates/python.txt
autocmd FileType python setlocal completeopt-=preview
" autocmd FileType xml :set dict=~/.vim/dict/xacro.dict

augroup fileTypeIndent
	autocmd!
	autocmd BufNewFile,BufRead *.md setlocal tabstop=4 autoindent expandtab softtabstop=4 shiftwidth=4 
augroup END

syntax enable 
